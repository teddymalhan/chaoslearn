WEBVTT
Kind: captions
Language: en

00:00:07.839 --> 00:00:08.950 align:start position:0%
 
what<00:00:08.400><c> is</c>

00:00:08.950 --> 00:00:08.960 align:start position:0%
what is
 

00:00:08.960 --> 00:00:14.070 align:start position:0%
what is
going<00:00:09.519><c> on</c><00:00:10.240><c> here</c>

00:00:14.070 --> 00:00:14.080 align:start position:0%
 
 

00:00:14.080 --> 00:00:16.950 align:start position:0%
 
oh<00:00:14.960><c> my</c><00:00:15.200><c> god</c><00:00:15.839><c> hey</c><00:00:16.000><c> nick</c><00:00:16.400><c> studying</c><00:00:16.720><c> for</c>

00:00:16.950 --> 00:00:16.960 align:start position:0%
oh my god hey nick studying for
 

00:00:16.960 --> 00:00:17.830 align:start position:0%
oh my god hey nick studying for
interview

00:00:17.830 --> 00:00:17.840 align:start position:0%
interview
 

00:00:17.840 --> 00:00:21.429 align:start position:0%
interview
yeah<00:00:18.320><c> i</c><00:00:18.560><c> am</c><00:00:19.039><c> but</c><00:00:20.240><c> i'm</c><00:00:20.400><c> really</c><00:00:20.720><c> nervous</c>

00:00:21.429 --> 00:00:21.439 align:start position:0%
yeah i am but i'm really nervous
 

00:00:21.439 --> 00:00:25.029 align:start position:0%
yeah i am but i'm really nervous
i<00:00:21.600><c> mean</c><00:00:23.119><c> i</c><00:00:23.279><c> can't</c><00:00:23.519><c> even</c><00:00:23.760><c> invert</c><00:00:24.080><c> a</c><00:00:24.160><c> binary</c><00:00:24.640><c> tree</c>

00:00:25.029 --> 00:00:25.039 align:start position:0%
i mean i can't even invert a binary tree
 

00:00:25.039 --> 00:00:27.269 align:start position:0%
i mean i can't even invert a binary tree
or<00:00:25.439><c> reverse</c><00:00:25.840><c> a</c><00:00:25.920><c> linked</c><00:00:26.240><c> list</c><00:00:26.720><c> wait</c><00:00:26.960><c> when's</c>

00:00:27.269 --> 00:00:27.279 align:start position:0%
or reverse a linked list wait when's
 

00:00:27.279 --> 00:00:28.150 align:start position:0%
or reverse a linked list wait when's
your<00:00:27.439><c> interview</c>

00:00:28.150 --> 00:00:28.160 align:start position:0%
your interview
 

00:00:28.160 --> 00:00:32.470 align:start position:0%
your interview
uh<00:00:28.560><c> i</c><00:00:28.640><c> think</c><00:00:28.800><c> it's</c><00:00:29.039><c> in</c><00:00:29.119><c> like</c><00:00:30.320><c> five</c><00:00:30.560><c> minutes</c>

00:00:32.470 --> 00:00:32.480 align:start position:0%
uh i think it's in like five minutes
 

00:00:32.480 --> 00:00:34.549 align:start position:0%
uh i think it's in like five minutes
okay<00:00:33.120><c> you</c><00:00:33.280><c> know</c><00:00:33.440><c> what</c><00:00:33.840><c> you're</c><00:00:34.000><c> probably</c><00:00:34.320><c> gonna</c>

00:00:34.549 --> 00:00:34.559 align:start position:0%
okay you know what you're probably gonna
 

00:00:34.559 --> 00:00:37.110 align:start position:0%
okay you know what you're probably gonna
fail<00:00:35.360><c> but</c><00:00:35.600><c> if</c><00:00:35.760><c> you</c><00:00:35.840><c> ever</c><00:00:36.000><c> get</c><00:00:36.239><c> stuck</c>

00:00:37.110 --> 00:00:37.120 align:start position:0%
fail but if you ever get stuck
 

00:00:37.120 --> 00:00:39.110 align:start position:0%
fail but if you ever get stuck
just<00:00:37.440><c> throw</c><00:00:37.680><c> a</c><00:00:37.760><c> hash</c><00:00:38.000><c> map</c><00:00:38.239><c> at</c><00:00:38.320><c> the</c><00:00:38.480><c> problem</c>

00:00:39.110 --> 00:00:39.120 align:start position:0%
just throw a hash map at the problem
 

00:00:39.120 --> 00:00:42.830 align:start position:0%
just throw a hash map at the problem
throw<00:00:39.360><c> a</c><00:00:39.440><c> hash</c><00:00:39.760><c> map</c>

00:00:42.830 --> 00:00:42.840 align:start position:0%
 
 

00:00:42.840 --> 00:00:46.150 align:start position:0%
 
what

00:00:46.150 --> 00:00:46.160 align:start position:0%
 
 

00:00:46.160 --> 00:00:48.140 align:start position:0%
 
okay<00:00:47.120><c> it's</c><00:00:47.360><c> time</c>

00:00:48.140 --> 00:00:48.150 align:start position:0%
okay it's time
 

00:00:48.150 --> 00:00:51.670 align:start position:0%
okay it's time
[Music]

00:00:51.670 --> 00:00:51.680 align:start position:0%
[Music]
 

00:00:51.680 --> 00:00:53.830 align:start position:0%
[Music]
hey<00:00:51.920><c> nick</c><00:00:52.320><c> i'm</c><00:00:52.480><c> nick</c><00:00:52.719><c> with</c><00:00:52.879><c> a</c><00:00:53.039><c> k</c><00:00:53.360><c> and</c><00:00:53.600><c> i'm</c><00:00:53.760><c> a</c>

00:00:53.830 --> 00:00:53.840 align:start position:0%
hey nick i'm nick with a k and i'm a
 

00:00:53.840 --> 00:00:55.189 align:start position:0%
hey nick i'm nick with a k and i'm a
senior<00:00:54.239><c> software</c><00:00:54.559><c> engineer</c>

00:00:55.189 --> 00:00:55.199 align:start position:0%
senior software engineer
 

00:00:55.199 --> 00:00:57.830 align:start position:0%
senior software engineer
here<00:00:55.440><c> at</c><00:00:55.600><c> face</c><00:00:55.840><c> on</c><00:00:56.000><c> google</c><00:00:56.480><c> flicks</c><00:00:57.520><c> i'm</c><00:00:57.680><c> just</c>

00:00:57.830 --> 00:00:57.840 align:start position:0%
here at face on google flicks i'm just
 

00:00:57.840 --> 00:00:59.270 align:start position:0%
here at face on google flicks i'm just
going<00:00:57.920><c> to</c><00:00:58.000><c> send</c><00:00:58.239><c> over</c><00:00:58.399><c> a</c><00:00:58.480><c> coder</c><00:00:58.800><c> pad</c><00:00:59.039><c> and</c><00:00:59.120><c> then</c>

00:00:59.270 --> 00:00:59.280 align:start position:0%
going to send over a coder pad and then
 

00:00:59.280 --> 00:01:00.470 align:start position:0%
going to send over a coder pad and then
we<00:00:59.359><c> can</c><00:00:59.440><c> get</c><00:00:59.680><c> started</c>

00:01:00.470 --> 00:01:00.480 align:start position:0%
we can get started
 

00:01:00.480 --> 00:01:03.349 align:start position:0%
we can get started
yep<00:01:00.800><c> sounds</c><00:01:01.120><c> good</c><00:01:02.239><c> so</c><00:01:02.480><c> here's</c><00:01:02.719><c> the</c><00:01:02.879><c> problem</c>

00:01:03.349 --> 00:01:03.359 align:start position:0%
yep sounds good so here's the problem
 

00:01:03.359 --> 00:01:05.509 align:start position:0%
yep sounds good so here's the problem
given<00:01:03.680><c> an</c><00:01:03.840><c> array</c><00:01:04.159><c> of</c><00:01:04.239><c> integers</c><00:01:04.720><c> nums</c><00:01:05.119><c> and</c><00:01:05.360><c> an</c>

00:01:05.509 --> 00:01:05.519 align:start position:0%
given an array of integers nums and an
 

00:01:05.519 --> 00:01:06.789 align:start position:0%
given an array of integers nums and an
integer<00:01:06.000><c> target</c>

00:01:06.789 --> 00:01:06.799 align:start position:0%
integer target
 

00:01:06.799 --> 00:01:08.950 align:start position:0%
integer target
return<00:01:07.200><c> indices</c><00:01:07.760><c> of</c><00:01:07.920><c> the</c><00:01:08.000><c> two</c><00:01:08.240><c> numbers</c><00:01:08.720><c> such</c>

00:01:08.950 --> 00:01:08.960 align:start position:0%
return indices of the two numbers such
 

00:01:08.960 --> 00:01:10.390 align:start position:0%
return indices of the two numbers such
that<00:01:09.119><c> they</c><00:01:09.360><c> add</c><00:01:09.520><c> up</c><00:01:09.680><c> to</c><00:01:09.840><c> target</c>

00:01:10.390 --> 00:01:10.400 align:start position:0%
that they add up to target
 

00:01:10.400 --> 00:01:11.990 align:start position:0%
that they add up to target
and<00:01:10.640><c> you</c><00:01:10.799><c> can</c><00:01:10.880><c> just</c><00:01:11.119><c> assume</c><00:01:11.439><c> that</c><00:01:11.680><c> there</c><00:01:11.840><c> will</c>

00:01:11.990 --> 00:01:12.000 align:start position:0%
and you can just assume that there will
 

00:01:12.000 --> 00:01:14.630 align:start position:0%
and you can just assume that there will
always<00:01:12.320><c> be</c><00:01:12.560><c> a</c><00:01:12.640><c> solution</c>

00:01:14.630 --> 00:01:14.640 align:start position:0%
always be a solution
 

00:01:14.640 --> 00:01:17.109 align:start position:0%
always be a solution
what<00:01:14.880><c> an</c><00:01:15.040><c> easy</c><00:01:15.360><c> problem</c><00:01:16.400><c> i</c><00:01:16.560><c> did</c><00:01:16.720><c> this</c><00:01:16.880><c> last</c>

00:01:17.109 --> 00:01:17.119 align:start position:0%
what an easy problem i did this last
 

00:01:17.119 --> 00:01:18.550 align:start position:0%
what an easy problem i did this last
night<00:01:17.600><c> but</c><00:01:17.840><c> i'm</c><00:01:17.920><c> going</c><00:01:18.000><c> to</c><00:01:18.080><c> pretend</c><00:01:18.479><c> i've</c>

00:01:18.550 --> 00:01:18.560 align:start position:0%
night but i'm going to pretend i've
 

00:01:18.560 --> 00:01:20.149 align:start position:0%
night but i'm going to pretend i've
never<00:01:18.799><c> seen</c><00:01:18.960><c> this</c><00:01:19.119><c> before</c>

00:01:20.149 --> 00:01:20.159 align:start position:0%
never seen this before
 

00:01:20.159 --> 00:01:24.070 align:start position:0%
never seen this before
hmm<00:01:21.119><c> interesting</c><00:01:22.560><c> yeah</c><00:01:22.960><c> so</c>

00:01:24.070 --> 00:01:24.080 align:start position:0%
hmm interesting yeah so
 

00:01:24.080 --> 00:01:25.990 align:start position:0%
hmm interesting yeah so
i<00:01:24.159><c> guess</c><00:01:24.400><c> my</c><00:01:24.640><c> initial</c><00:01:24.960><c> approach</c><00:01:25.360><c> would</c><00:01:25.600><c> be</c><00:01:25.759><c> to</c>

00:01:25.990 --> 00:01:26.000 align:start position:0%
i guess my initial approach would be to
 

00:01:26.000 --> 00:01:28.070 align:start position:0%
i guess my initial approach would be to
use<00:01:26.799><c> two</c><00:01:27.040><c> for</c><00:01:27.280><c> loops</c><00:01:27.680><c> and</c><00:01:27.759><c> then</c>

00:01:28.070 --> 00:01:28.080 align:start position:0%
use two for loops and then
 

00:01:28.080 --> 00:01:29.830 align:start position:0%
use two for loops and then
iterate<00:01:28.479><c> through</c><00:01:28.640><c> the</c><00:01:28.799><c> array</c><00:01:29.520><c> checking</c>

00:01:29.830 --> 00:01:29.840 align:start position:0%
iterate through the array checking
 

00:01:29.840 --> 00:01:31.749 align:start position:0%
iterate through the array checking
whether<00:01:30.079><c> the</c><00:01:30.240><c> sum</c><00:01:30.640><c> of</c><00:01:30.799><c> the</c><00:01:30.960><c> current</c><00:01:31.280><c> number</c>

00:01:31.749 --> 00:01:31.759 align:start position:0%
whether the sum of the current number
 

00:01:31.759 --> 00:01:33.749 align:start position:0%
whether the sum of the current number
and<00:01:32.320><c> each</c><00:01:32.560><c> of</c><00:01:32.640><c> the</c><00:01:32.720><c> numbers</c><00:01:33.119><c> in</c><00:01:33.200><c> front</c><00:01:33.360><c> of</c><00:01:33.520><c> it</c>

00:01:33.749 --> 00:01:33.759 align:start position:0%
and each of the numbers in front of it
 

00:01:33.759 --> 00:01:35.270 align:start position:0%
and each of the numbers in front of it
adds<00:01:34.000><c> up</c><00:01:34.159><c> to</c><00:01:34.240><c> the</c><00:01:34.400><c> target</c>

00:01:35.270 --> 00:01:35.280 align:start position:0%
adds up to the target
 

00:01:35.280 --> 00:01:37.510 align:start position:0%
adds up to the target
yep<00:01:35.600><c> that</c><00:01:35.840><c> sounds</c><00:01:36.079><c> like</c><00:01:36.320><c> a</c><00:01:36.400><c> good</c><00:01:36.640><c> start</c><00:01:37.200><c> do</c><00:01:37.360><c> you</c>

00:01:37.510 --> 00:01:37.520 align:start position:0%
yep that sounds like a good start do you
 

00:01:37.520 --> 00:01:38.710 align:start position:0%
yep that sounds like a good start do you
want<00:01:37.680><c> to</c><00:01:37.759><c> code</c><00:01:38.000><c> it</c><00:01:38.159><c> up</c>

00:01:38.710 --> 00:01:38.720 align:start position:0%
want to code it up
 

00:01:38.720 --> 00:01:41.190 align:start position:0%
want to code it up
yeah<00:01:38.960><c> sure</c><00:01:39.439><c> no</c><00:01:39.600><c> problem</c><00:01:40.479><c> i'll</c><00:01:40.640><c> start</c><00:01:40.880><c> coding</c>

00:01:41.190 --> 00:01:41.200 align:start position:0%
yeah sure no problem i'll start coding
 

00:01:41.200 --> 00:01:47.350 align:start position:0%
yeah sure no problem i'll start coding
it<00:01:41.280><c> up</c><00:01:41.360><c> right</c><00:01:41.520><c> now</c>

00:01:47.350 --> 00:01:47.360 align:start position:0%
 
 

00:01:47.360 --> 00:01:49.510 align:start position:0%
 
and<00:01:47.439><c> then</c><00:01:47.759><c> in</c><00:01:47.920><c> the</c><00:01:48.079><c> event</c><00:01:48.399><c> that</c><00:01:48.720><c> there</c><00:01:49.040><c> are</c><00:01:49.280><c> no</c>

00:01:49.510 --> 00:01:49.520 align:start position:0%
and then in the event that there are no
 

00:01:49.520 --> 00:01:51.190 align:start position:0%
and then in the event that there are no
solutions<00:01:50.079><c> then</c><00:01:50.240><c> we</c><00:01:50.399><c> can</c><00:01:50.560><c> just</c><00:01:50.799><c> throw</c><00:01:51.040><c> an</c>

00:01:51.190 --> 00:01:51.200 align:start position:0%
solutions then we can just throw an
 

00:01:51.200 --> 00:01:51.910 align:start position:0%
solutions then we can just throw an
error

00:01:51.910 --> 00:01:51.920 align:start position:0%
error
 

00:01:51.920 --> 00:01:54.389 align:start position:0%
error
yeah<00:01:52.240><c> so</c><00:01:52.640><c> that</c><00:01:52.880><c> should</c><00:01:53.200><c> work</c><00:01:53.680><c> and</c><00:01:54.000><c> it's</c><00:01:54.159><c> time</c>

00:01:54.389 --> 00:01:54.399 align:start position:0%
yeah so that should work and it's time
 

00:01:54.399 --> 00:01:56.550 align:start position:0%
yeah so that should work and it's time
complexity<00:01:55.119><c> is</c><00:01:55.360><c> o</c><00:01:55.520><c> of</c><00:01:55.600><c> n</c><00:01:55.840><c> squared</c>

00:01:56.550 --> 00:01:56.560 align:start position:0%
complexity is o of n squared
 

00:01:56.560 --> 00:01:58.069 align:start position:0%
complexity is o of n squared
because<00:01:56.799><c> for</c><00:01:56.960><c> each</c><00:01:57.200><c> element</c><00:01:57.520><c> we're</c><00:01:57.759><c> looping</c>

00:01:58.069 --> 00:01:58.079 align:start position:0%
because for each element we're looping
 

00:01:58.079 --> 00:01:59.350 align:start position:0%
because for each element we're looping
through<00:01:58.240><c> the</c><00:01:58.320><c> rest</c><00:01:58.560><c> of</c><00:01:58.640><c> the</c><00:01:58.719><c> array</c><00:01:59.040><c> to</c><00:01:59.119><c> find</c>

00:01:59.350 --> 00:01:59.360 align:start position:0%
through the rest of the array to find
 

00:01:59.360 --> 00:02:00.310 align:start position:0%
through the rest of the array to find
its<00:01:59.520><c> complement</c>

00:02:00.310 --> 00:02:00.320 align:start position:0%
its complement
 

00:02:00.320 --> 00:02:03.270 align:start position:0%
its complement
which<00:02:00.560><c> takes</c><00:02:00.799><c> of</c><00:02:01.040><c> n</c><00:02:01.280><c> time</c><00:02:02.079><c> and</c><00:02:02.560><c> also</c><00:02:02.880><c> the</c><00:02:02.960><c> space</c>

00:02:03.270 --> 00:02:03.280 align:start position:0%
which takes of n time and also the space
 

00:02:03.280 --> 00:02:04.069 align:start position:0%
which takes of n time and also the space
complexity

00:02:04.069 --> 00:02:04.079 align:start position:0%
complexity
 

00:02:04.079 --> 00:02:07.109 align:start position:0%
complexity
is<00:02:04.240><c> of</c><00:02:04.560><c> one</c><00:02:05.200><c> okay</c><00:02:05.600><c> that</c><00:02:05.840><c> seems</c><00:02:06.079><c> all</c><00:02:06.240><c> right</c><00:02:06.880><c> but</c>

00:02:07.109 --> 00:02:07.119 align:start position:0%
is of one okay that seems all right but
 

00:02:07.119 --> 00:02:08.630 align:start position:0%
is of one okay that seems all right but
it's<00:02:07.280><c> a</c><00:02:07.360><c> bit</c><00:02:07.520><c> slow</c><00:02:07.840><c> as</c><00:02:08.000><c> you</c><00:02:08.080><c> mentioned</c><00:02:08.479><c> it's</c>

00:02:08.630 --> 00:02:08.640 align:start position:0%
it's a bit slow as you mentioned it's
 

00:02:08.640 --> 00:02:09.990 align:start position:0%
it's a bit slow as you mentioned it's
quadratic<00:02:09.119><c> in</c><00:02:09.280><c> time</c>

00:02:09.990 --> 00:02:10.000 align:start position:0%
quadratic in time
 

00:02:10.000 --> 00:02:11.430 align:start position:0%
quadratic in time
do<00:02:10.160><c> you</c><00:02:10.239><c> think</c><00:02:10.399><c> you</c><00:02:10.560><c> could</c><00:02:10.720><c> make</c><00:02:10.959><c> it</c><00:02:11.200><c> even</c>

00:02:11.430 --> 00:02:11.440 align:start position:0%
do you think you could make it even
 

00:02:11.440 --> 00:02:13.670 align:start position:0%
do you think you could make it even
faster<00:02:12.640><c> of</c><00:02:12.800><c> course</c>

00:02:13.670 --> 00:02:13.680 align:start position:0%
faster of course
 

00:02:13.680 --> 00:02:16.869 align:start position:0%
faster of course
i<00:02:13.840><c> knew</c><00:02:14.080><c> this</c><00:02:14.239><c> was</c><00:02:14.400><c> coming</c><00:02:16.160><c> yeah</c><00:02:16.400><c> so</c><00:02:16.640><c> we</c><00:02:16.800><c> can</c>

00:02:16.869 --> 00:02:16.879 align:start position:0%
i knew this was coming yeah so we can
 

00:02:16.879 --> 00:02:18.390 align:start position:0%
i knew this was coming yeah so we can
just<00:02:17.120><c> sort</c><00:02:17.360><c> the</c><00:02:17.440><c> array</c><00:02:17.760><c> first</c>

00:02:18.390 --> 00:02:18.400 align:start position:0%
just sort the array first
 

00:02:18.400 --> 00:02:20.470 align:start position:0%
just sort the array first
and<00:02:18.480><c> then</c><00:02:18.720><c> use</c><00:02:18.959><c> a</c><00:02:19.040><c> left</c><00:02:19.360><c> and</c><00:02:19.440><c> a</c><00:02:19.520><c> right</c><00:02:19.760><c> pointer</c>

00:02:20.470 --> 00:02:20.480 align:start position:0%
and then use a left and a right pointer
 

00:02:20.480 --> 00:02:21.430 align:start position:0%
and then use a left and a right pointer
and<00:02:20.720><c> move</c><00:02:20.959><c> those</c>

00:02:21.430 --> 00:02:21.440 align:start position:0%
and move those
 

00:02:21.440 --> 00:02:22.710 align:start position:0%
and move those
towards<00:02:21.760><c> the</c><00:02:21.840><c> middle</c><00:02:22.160><c> of</c><00:02:22.239><c> the</c><00:02:22.319><c> array</c>

00:02:22.710 --> 00:02:22.720 align:start position:0%
towards the middle of the array
 

00:02:22.720 --> 00:02:25.110 align:start position:0%
towards the middle of the array
accordingly<00:02:23.760><c> based</c><00:02:24.080><c> on</c><00:02:24.239><c> whether</c><00:02:24.480><c> the</c><00:02:24.720><c> sum</c>

00:02:25.110 --> 00:02:25.120 align:start position:0%
accordingly based on whether the sum
 

00:02:25.120 --> 00:02:28.070 align:start position:0%
accordingly based on whether the sum
is<00:02:25.840><c> less</c><00:02:26.080><c> than</c><00:02:26.400><c> or</c><00:02:26.720><c> greater</c><00:02:26.959><c> than</c><00:02:27.120><c> our</c><00:02:27.280><c> target</c>

00:02:28.070 --> 00:02:28.080 align:start position:0%
is less than or greater than our target
 

00:02:28.080 --> 00:02:29.670 align:start position:0%
is less than or greater than our target
and<00:02:28.239><c> so</c><00:02:28.480><c> the</c><00:02:28.640><c> time</c><00:02:28.879><c> complexity</c><00:02:29.440><c> of</c><00:02:29.520><c> this</c>

00:02:29.670 --> 00:02:29.680 align:start position:0%
and so the time complexity of this
 

00:02:29.680 --> 00:02:30.630 align:start position:0%
and so the time complexity of this
solution

00:02:30.630 --> 00:02:30.640 align:start position:0%
solution
 

00:02:30.640 --> 00:02:32.630 align:start position:0%
solution
would<00:02:30.800><c> be</c><00:02:30.959><c> o</c><00:02:31.200><c> of</c><00:02:31.280><c> n</c><00:02:31.440><c> log</c><00:02:31.760><c> n</c><00:02:32.000><c> because</c><00:02:32.319><c> we</c><00:02:32.400><c> need</c><00:02:32.560><c> to</c>

00:02:32.630 --> 00:02:32.640 align:start position:0%
would be o of n log n because we need to
 

00:02:32.640 --> 00:02:33.670 align:start position:0%
would be o of n log n because we need to
sort<00:02:32.879><c> the</c><00:02:32.959><c> array</c>

00:02:33.670 --> 00:02:33.680 align:start position:0%
sort the array
 

00:02:33.680 --> 00:02:35.110 align:start position:0%
sort the array
and<00:02:33.760><c> then</c><00:02:33.920><c> we</c><00:02:34.080><c> also</c><00:02:34.239><c> have</c><00:02:34.400><c> just</c><00:02:34.560><c> one</c><00:02:34.800><c> pass</c>

00:02:35.110 --> 00:02:35.120 align:start position:0%
and then we also have just one pass
 

00:02:35.120 --> 00:02:37.030 align:start position:0%
and then we also have just one pass
through<00:02:35.280><c> the</c><00:02:35.440><c> array</c><00:02:35.680><c> which</c><00:02:35.920><c> is</c><00:02:36.000><c> all</c><00:02:36.239><c> of</c><00:02:36.319><c> n</c>

00:02:37.030 --> 00:02:37.040 align:start position:0%
through the array which is all of n
 

00:02:37.040 --> 00:02:39.509 align:start position:0%
through the array which is all of n
and<00:02:37.360><c> also</c><00:02:37.840><c> our</c><00:02:38.000><c> space</c><00:02:38.239><c> complexity</c><00:02:38.879><c> will</c><00:02:39.040><c> be</c><00:02:39.200><c> of</c>

00:02:39.509 --> 00:02:39.519 align:start position:0%
and also our space complexity will be of
 

00:02:39.519 --> 00:02:40.710 align:start position:0%
and also our space complexity will be of
one

00:02:40.710 --> 00:02:40.720 align:start position:0%
one
 

00:02:40.720 --> 00:02:43.670 align:start position:0%
one
yes<00:02:41.440><c> i</c><00:02:41.680><c> did</c><00:02:41.920><c> it</c><00:02:42.560><c> i</c><00:02:42.720><c> definitely</c><00:02:43.120><c> passed</c><00:02:43.519><c> the</c>

00:02:43.670 --> 00:02:43.680 align:start position:0%
yes i did it i definitely passed the
 

00:02:43.680 --> 00:02:44.710 align:start position:0%
yes i did it i definitely passed the
interview

00:02:44.710 --> 00:02:44.720 align:start position:0%
interview
 

00:02:44.720 --> 00:02:46.949 align:start position:0%
interview
well<00:02:44.959><c> yes</c><00:02:45.360><c> this</c><00:02:45.599><c> is</c><00:02:45.760><c> a</c><00:02:45.840><c> bit</c><00:02:46.080><c> better</c><00:02:46.480><c> but</c><00:02:46.800><c> it's</c>

00:02:46.949 --> 00:02:46.959 align:start position:0%
well yes this is a bit better but it's
 

00:02:46.959 --> 00:02:49.110 align:start position:0%
well yes this is a bit better but it's
still<00:02:47.120><c> kind</c><00:02:47.280><c> of</c><00:02:47.440><c> slow</c>

00:02:49.110 --> 00:02:49.120 align:start position:0%
still kind of slow
 

00:02:49.120 --> 00:02:51.190 align:start position:0%
still kind of slow
i<00:02:49.280><c> want</c><00:02:49.440><c> you</c><00:02:49.519><c> to</c><00:02:49.680><c> think</c><00:02:50.000><c> of</c><00:02:50.319><c> a</c><00:02:50.480><c> solution</c><00:02:51.040><c> in</c>

00:02:51.190 --> 00:02:51.200 align:start position:0%
i want you to think of a solution in
 

00:02:51.200 --> 00:02:52.309 align:start position:0%
i want you to think of a solution in
linear<00:02:51.599><c> time</c>

00:02:52.309 --> 00:02:52.319 align:start position:0%
linear time
 

00:02:52.319 --> 00:02:55.350 align:start position:0%
linear time
what<00:02:53.200><c> linear</c><00:02:53.680><c> time</c><00:02:54.480><c> i</c><00:02:54.560><c> thought</c><00:02:54.800><c> i</c><00:02:54.879><c> already</c><00:02:55.120><c> got</c>

00:02:55.350 --> 00:02:55.360 align:start position:0%
what linear time i thought i already got
 

00:02:55.360 --> 00:02:56.790 align:start position:0%
what linear time i thought i already got
the<00:02:55.519><c> optimal</c><00:02:55.840><c> solution</c>

00:02:56.790 --> 00:02:56.800 align:start position:0%
the optimal solution
 

00:02:56.800 --> 00:02:58.229 align:start position:0%
the optimal solution
there's<00:02:57.040><c> no</c><00:02:57.280><c> way</c><00:02:57.440><c> you</c><00:02:57.599><c> can</c><00:02:57.680><c> make</c><00:02:57.840><c> it</c><00:02:58.000><c> even</c>

00:02:58.229 --> 00:02:58.239 align:start position:0%
there's no way you can make it even
 

00:02:58.239 --> 00:03:01.110 align:start position:0%
there's no way you can make it even
faster<00:02:59.200><c> hmm</c>

00:03:01.110 --> 00:03:01.120 align:start position:0%
faster hmm
 

00:03:01.120 --> 00:03:04.309 align:start position:0%
faster hmm
ah<00:03:02.840><c> well</c><00:03:04.000><c> i</c>

00:03:04.309 --> 00:03:04.319 align:start position:0%
ah well i
 

00:03:04.319 --> 00:03:08.949 align:start position:0%
ah well i
uh<00:03:05.200><c> i</c><00:03:05.360><c> guess</c><00:03:06.080><c> we</c><00:03:06.879><c> we</c><00:03:07.120><c> could</c><00:03:07.440><c> uh</c>

00:03:08.949 --> 00:03:08.959 align:start position:0%
uh i guess we we could uh
 

00:03:08.959 --> 00:03:12.869 align:start position:0%
uh i guess we we could uh
maybe<00:03:10.239><c> uh</c><00:03:11.840><c> instead</c><00:03:12.239><c> of</c>

00:03:12.869 --> 00:03:12.879 align:start position:0%
maybe uh instead of
 

00:03:12.879 --> 00:03:16.390 align:start position:0%
maybe uh instead of
doing<00:03:13.360><c> uh</c><00:03:13.680><c> what</c><00:03:13.840><c> we</c><00:03:14.000><c> had</c><00:03:14.239><c> before</c><00:03:14.720><c> we</c><00:03:14.959><c> could</c><00:03:15.360><c> uh</c>

00:03:16.390 --> 00:03:16.400 align:start position:0%
doing uh what we had before we could uh
 

00:03:16.400 --> 00:03:19.430 align:start position:0%
doing uh what we had before we could uh
instead<00:03:16.959><c> uh</c><00:03:17.760><c> do</c>

00:03:19.430 --> 00:03:19.440 align:start position:0%
instead uh do
 

00:03:19.440 --> 00:03:22.550 align:start position:0%
instead uh do
uh<00:03:20.560><c> uh</c><00:03:20.959><c> nick</c><00:03:21.280><c> we</c><00:03:21.440><c> only</c><00:03:21.680><c> have</c><00:03:22.000><c> about</c><00:03:22.319><c> five</c>

00:03:22.550 --> 00:03:22.560 align:start position:0%
uh uh nick we only have about five
 

00:03:22.560 --> 00:03:23.430 align:start position:0%
uh uh nick we only have about five
minutes<00:03:22.879><c> left</c>

00:03:23.430 --> 00:03:23.440 align:start position:0%
minutes left
 

00:03:23.440 --> 00:03:24.710 align:start position:0%
minutes left
so<00:03:23.760><c> if</c><00:03:23.840><c> you</c><00:03:23.920><c> can't</c><00:03:24.080><c> think</c><00:03:24.319><c> of</c><00:03:24.400><c> a</c><00:03:24.480><c> better</c>

00:03:24.710 --> 00:03:24.720 align:start position:0%
so if you can't think of a better
 

00:03:24.720 --> 00:03:26.630 align:start position:0%
so if you can't think of a better
solution<00:03:25.280><c> don't</c><00:03:25.440><c> worry</c><00:03:25.680><c> about</c><00:03:25.920><c> it</c><00:03:26.159><c> come</c><00:03:26.400><c> on</c>

00:03:26.630 --> 00:03:26.640 align:start position:0%
solution don't worry about it come on
 

00:03:26.640 --> 00:03:27.270 align:start position:0%
solution don't worry about it come on
nick

00:03:27.270 --> 00:03:27.280 align:start position:0%
nick
 

00:03:27.280 --> 00:03:31.430 align:start position:0%
nick
think<00:03:28.560><c> think</c><00:03:29.599><c> what</c><00:03:29.760><c> could</c><00:03:30.000><c> we</c><00:03:30.159><c> do</c>

00:03:31.430 --> 00:03:31.440 align:start position:0%
think think what could we do
 

00:03:31.440 --> 00:03:34.789 align:start position:0%
think think what could we do
man<00:03:31.760><c> i'm</c><00:03:31.920><c> so</c><00:03:32.159><c> stuck</c><00:03:33.680><c> wait</c>

00:03:34.789 --> 00:03:34.799 align:start position:0%
man i'm so stuck wait
 

00:03:34.799 --> 00:03:37.430 align:start position:0%
man i'm so stuck wait
stuck<00:03:35.360><c> if</c><00:03:35.440><c> you</c><00:03:35.599><c> ever</c><00:03:35.760><c> get</c><00:03:35.920><c> stuck</c><00:03:36.799><c> just</c><00:03:37.120><c> throw</c><00:03:37.360><c> a</c>

00:03:37.430 --> 00:03:37.440 align:start position:0%
stuck if you ever get stuck just throw a
 

00:03:37.440 --> 00:03:38.630 align:start position:0%
stuck if you ever get stuck just throw a
hash<00:03:37.680><c> map</c><00:03:38.000><c> at</c><00:03:38.080><c> the</c><00:03:38.159><c> problem</c>

00:03:38.630 --> 00:03:38.640 align:start position:0%
hash map at the problem
 

00:03:38.640 --> 00:03:43.030 align:start position:0%
hash map at the problem
throw<00:03:38.879><c> a</c><00:03:38.959><c> hash</c><00:03:39.200><c> map</c><00:03:39.440><c> at</c><00:03:39.519><c> the</c><00:03:39.680><c> problem</c>

00:03:43.030 --> 00:03:43.040 align:start position:0%
 
 

00:03:43.040 --> 00:03:46.149 align:start position:0%
 
that's<00:03:43.360><c> it</c><00:03:43.760><c> i'll</c><00:03:43.920><c> use</c><00:03:44.080><c> a</c><00:03:44.159><c> hash</c><00:03:44.480><c> map</c><00:03:45.280><c> yeah</c><00:03:45.599><c> so</c>

00:03:46.149 --> 00:03:46.159 align:start position:0%
that's it i'll use a hash map yeah so
 

00:03:46.159 --> 00:03:48.309 align:start position:0%
that's it i'll use a hash map yeah so
we<00:03:46.319><c> can</c><00:03:46.480><c> use</c><00:03:46.959><c> a</c><00:03:47.040><c> hash</c><00:03:47.360><c> map</c><00:03:47.840><c> we</c><00:03:48.000><c> can</c><00:03:48.080><c> just</c>

00:03:48.309 --> 00:03:48.319 align:start position:0%
we can use a hash map we can just
 

00:03:48.319 --> 00:03:49.509 align:start position:0%
we can use a hash map we can just
iterate<00:03:48.640><c> through</c><00:03:48.799><c> the</c><00:03:48.959><c> array</c>

00:03:49.509 --> 00:03:49.519 align:start position:0%
iterate through the array
 

00:03:49.519 --> 00:03:51.750 align:start position:0%
iterate through the array
and<00:03:49.760><c> find</c><00:03:50.000><c> the</c><00:03:50.080><c> complement</c><00:03:50.560><c> of</c><00:03:50.720><c> each</c><00:03:50.959><c> number</c>

00:03:51.750 --> 00:03:51.760 align:start position:0%
and find the complement of each number
 

00:03:51.760 --> 00:03:53.589 align:start position:0%
and find the complement of each number
and<00:03:52.000><c> if</c><00:03:52.080><c> the</c><00:03:52.239><c> complement</c><00:03:52.720><c> already</c><00:03:53.040><c> exists</c><00:03:53.439><c> as</c>

00:03:53.589 --> 00:03:53.599 align:start position:0%
and if the complement already exists as
 

00:03:53.599 --> 00:03:54.869 align:start position:0%
and if the complement already exists as
a<00:03:53.680><c> key</c><00:03:53.920><c> in</c><00:03:54.000><c> the</c><00:03:54.080><c> hashmap</c>

00:03:54.869 --> 00:03:54.879 align:start position:0%
a key in the hashmap
 

00:03:54.879 --> 00:03:56.470 align:start position:0%
a key in the hashmap
we<00:03:55.040><c> can</c><00:03:55.120><c> just</c><00:03:55.280><c> return</c><00:03:55.680><c> the</c><00:03:55.760><c> corresponding</c>

00:03:56.470 --> 00:03:56.480 align:start position:0%
we can just return the corresponding
 

00:03:56.480 --> 00:03:58.550 align:start position:0%
we can just return the corresponding
value<00:03:56.959><c> which</c><00:03:57.200><c> is</c><00:03:57.280><c> going</c><00:03:57.439><c> to</c><00:03:57.519><c> be</c><00:03:57.680><c> an</c><00:03:57.840><c> index</c>

00:03:58.550 --> 00:03:58.560 align:start position:0%
value which is going to be an index
 

00:03:58.560 --> 00:04:01.190 align:start position:0%
value which is going to be an index
along<00:03:58.879><c> with</c><00:03:59.040><c> our</c><00:03:59.120><c> current</c><00:03:59.439><c> index</c><00:04:00.319><c> and</c><00:04:00.560><c> the</c><00:04:00.799><c> sum</c>

00:04:01.190 --> 00:04:01.200 align:start position:0%
along with our current index and the sum
 

00:04:01.200 --> 00:04:02.390 align:start position:0%
along with our current index and the sum
of<00:04:01.519><c> the</c>

00:04:02.390 --> 00:04:02.400 align:start position:0%
of the
 

00:04:02.400 --> 00:04:04.550 align:start position:0%
of the
two<00:04:02.640><c> numbers</c><00:04:03.120><c> at</c><00:04:03.280><c> those</c><00:04:03.599><c> indices</c><00:04:04.080><c> will</c><00:04:04.319><c> add</c><00:04:04.480><c> up</c>

00:04:04.550 --> 00:04:04.560 align:start position:0%
two numbers at those indices will add up
 

00:04:04.560 --> 00:04:05.990 align:start position:0%
two numbers at those indices will add up
to<00:04:04.720><c> our</c><00:04:04.879><c> target</c>

00:04:05.990 --> 00:04:06.000 align:start position:0%
to our target
 

00:04:06.000 --> 00:04:08.550 align:start position:0%
to our target
and<00:04:06.400><c> if</c><00:04:06.640><c> the</c><00:04:07.280><c> complement</c><00:04:07.840><c> does</c><00:04:08.080><c> not</c><00:04:08.239><c> already</c>

00:04:08.550 --> 00:04:08.560 align:start position:0%
and if the complement does not already
 

00:04:08.560 --> 00:04:09.350 align:start position:0%
and if the complement does not already
exist

00:04:09.350 --> 00:04:09.360 align:start position:0%
exist
 

00:04:09.360 --> 00:04:11.190 align:start position:0%
exist
as<00:04:09.599><c> a</c><00:04:09.680><c> key</c><00:04:09.840><c> in</c><00:04:09.920><c> the</c><00:04:10.000><c> hashmap</c><00:04:10.720><c> then</c><00:04:10.879><c> we're</c><00:04:11.040><c> just</c>

00:04:11.190 --> 00:04:11.200 align:start position:0%
as a key in the hashmap then we're just
 

00:04:11.200 --> 00:04:13.350 align:start position:0%
as a key in the hashmap then we're just
going<00:04:11.360><c> to</c><00:04:11.519><c> store</c><00:04:12.239><c> our</c><00:04:12.400><c> current</c><00:04:12.720><c> number</c>

00:04:13.350 --> 00:04:13.360 align:start position:0%
going to store our current number
 

00:04:13.360 --> 00:04:15.429 align:start position:0%
going to store our current number
along<00:04:13.599><c> with</c><00:04:13.760><c> our</c><00:04:14.000><c> current</c><00:04:14.319><c> index</c><00:04:14.879><c> in</c><00:04:15.040><c> our</c><00:04:15.200><c> hash</c>

00:04:15.429 --> 00:04:15.439 align:start position:0%
along with our current index in our hash
 

00:04:15.439 --> 00:04:17.349 align:start position:0%
along with our current index in our hash
map<00:04:16.079><c> yep</c><00:04:16.320><c> that</c><00:04:16.479><c> sounds</c><00:04:16.720><c> like</c><00:04:16.880><c> a</c><00:04:16.959><c> pretty</c><00:04:17.120><c> good</c>

00:04:17.349 --> 00:04:17.359 align:start position:0%
map yep that sounds like a pretty good
 

00:04:17.359 --> 00:04:18.390 align:start position:0%
map yep that sounds like a pretty good
plan

00:04:18.390 --> 00:04:18.400 align:start position:0%
plan
 

00:04:18.400 --> 00:04:19.830 align:start position:0%
plan
we<00:04:18.560><c> only</c><00:04:18.720><c> have</c><00:04:18.880><c> a</c><00:04:18.959><c> few</c><00:04:19.040><c> more</c><00:04:19.199><c> minutes</c><00:04:19.519><c> though</c>

00:04:19.830 --> 00:04:19.840 align:start position:0%
we only have a few more minutes though
 

00:04:19.840 --> 00:04:21.590 align:start position:0%
we only have a few more minutes though
so<00:04:20.239><c> if</c><00:04:20.400><c> you</c><00:04:20.479><c> could</c><00:04:20.639><c> code</c><00:04:20.880><c> that</c><00:04:21.040><c> up</c><00:04:21.199><c> quickly</c>

00:04:21.590 --> 00:04:21.600 align:start position:0%
so if you could code that up quickly
 

00:04:21.600 --> 00:04:22.550 align:start position:0%
so if you could code that up quickly
that'd<00:04:21.759><c> be</c><00:04:21.919><c> great</c>

00:04:22.550 --> 00:04:22.560 align:start position:0%
that'd be great
 

00:04:22.560 --> 00:04:31.590 align:start position:0%
that'd be great
yeah<00:04:22.800><c> sure</c><00:04:23.120><c> i</c><00:04:23.280><c> can</c><00:04:23.440><c> start</c><00:04:23.600><c> coding</c><00:04:23.919><c> it</c><00:04:24.000><c> up</c><00:04:26.840><c> now</c>

00:04:31.590 --> 00:04:31.600 align:start position:0%
 
 

00:04:31.600 --> 00:04:33.749 align:start position:0%
 
and<00:04:31.680><c> then</c><00:04:32.000><c> again</c><00:04:32.320><c> as</c><00:04:32.479><c> i</c><00:04:32.639><c> mentioned</c><00:04:33.520><c> in</c><00:04:33.600><c> the</c>

00:04:33.749 --> 00:04:33.759 align:start position:0%
and then again as i mentioned in the
 

00:04:33.759 --> 00:04:34.710 align:start position:0%
and then again as i mentioned in the
event<00:04:34.240><c> that</c>

00:04:34.710 --> 00:04:34.720 align:start position:0%
event that
 

00:04:34.720 --> 00:04:36.790 align:start position:0%
event that
um<00:04:35.280><c> the</c><00:04:35.440><c> complement</c><00:04:35.919><c> does</c><00:04:36.080><c> not</c><00:04:36.320><c> exist</c><00:04:36.639><c> in</c><00:04:36.720><c> the</c>

00:04:36.790 --> 00:04:36.800 align:start position:0%
um the complement does not exist in the
 

00:04:36.800 --> 00:04:38.629 align:start position:0%
um the complement does not exist in the
hashmap<00:04:37.520><c> then</c><00:04:37.680><c> we're</c><00:04:37.840><c> just</c><00:04:38.000><c> going</c><00:04:38.240><c> to</c><00:04:38.320><c> store</c>

00:04:38.629 --> 00:04:38.639 align:start position:0%
hashmap then we're just going to store
 

00:04:38.639 --> 00:04:40.550 align:start position:0%
hashmap then we're just going to store
our<00:04:38.800><c> current</c><00:04:39.040><c> number</c><00:04:39.360><c> along</c><00:04:39.680><c> with</c><00:04:39.840><c> its</c><00:04:40.080><c> index</c>

00:04:40.550 --> 00:04:40.560 align:start position:0%
our current number along with its index
 

00:04:40.560 --> 00:04:41.590 align:start position:0%
our current number along with its index
in<00:04:40.639><c> the</c><00:04:40.720><c> hashmap</c>

00:04:41.590 --> 00:04:41.600 align:start position:0%
in the hashmap
 

00:04:41.600 --> 00:04:44.710 align:start position:0%
in the hashmap
so<00:04:42.160><c> that</c><00:04:42.560><c> should</c><00:04:42.880><c> work</c><00:04:43.360><c> and</c><00:04:44.000><c> in</c><00:04:44.160><c> terms</c><00:04:44.400><c> of</c><00:04:44.479><c> time</c>

00:04:44.710 --> 00:04:44.720 align:start position:0%
so that should work and in terms of time
 

00:04:44.720 --> 00:04:46.310 align:start position:0%
so that should work and in terms of time
complexity<00:04:45.360><c> we're</c><00:04:45.680><c> only</c><00:04:45.919><c> looping</c><00:04:46.160><c> through</c>

00:04:46.310 --> 00:04:46.320 align:start position:0%
complexity we're only looping through
 

00:04:46.320 --> 00:04:47.430 align:start position:0%
complexity we're only looping through
the<00:04:46.479><c> array</c><00:04:46.800><c> once</c>

00:04:47.430 --> 00:04:47.440 align:start position:0%
the array once
 

00:04:47.440 --> 00:04:49.350 align:start position:0%
the array once
and<00:04:47.600><c> since</c><00:04:47.840><c> hashmaps</c><00:04:48.400><c> have</c><00:04:48.560><c> constant</c><00:04:49.040><c> lookup</c>

00:04:49.350 --> 00:04:49.360 align:start position:0%
and since hashmaps have constant lookup
 

00:04:49.360 --> 00:04:50.870 align:start position:0%
and since hashmaps have constant lookup
times<00:04:50.000><c> this</c><00:04:50.240><c> algorithm</c>

00:04:50.870 --> 00:04:50.880 align:start position:0%
times this algorithm
 

00:04:50.880 --> 00:04:53.990 align:start position:0%
times this algorithm
is<00:04:51.040><c> simply</c><00:04:51.520><c> o</c><00:04:51.680><c> of</c><00:04:51.840><c> n</c><00:04:52.080><c> in</c><00:04:52.240><c> time</c><00:04:53.120><c> and</c><00:04:53.360><c> our</c><00:04:53.520><c> hashmap</c>

00:04:53.990 --> 00:04:54.000 align:start position:0%
is simply o of n in time and our hashmap
 

00:04:54.000 --> 00:04:55.110 align:start position:0%
is simply o of n in time and our hashmap
would<00:04:54.160><c> store</c><00:04:54.400><c> at</c><00:04:54.560><c> most</c><00:04:54.880><c> n</c>

00:04:55.110 --> 00:04:55.120 align:start position:0%
would store at most n
 

00:04:55.120 --> 00:04:57.510 align:start position:0%
would store at most n
elements<00:04:55.919><c> so</c><00:04:56.240><c> it's</c><00:04:56.400><c> going</c><00:04:56.560><c> to</c><00:04:56.639><c> be</c><00:04:56.880><c> of</c><00:04:57.199><c> n</c><00:04:57.360><c> in</c>

00:04:57.510 --> 00:04:57.520 align:start position:0%
elements so it's going to be of n in
 

00:04:57.520 --> 00:04:58.390 align:start position:0%
elements so it's going to be of n in
space

00:04:58.390 --> 00:04:58.400 align:start position:0%
space
 

00:04:58.400 --> 00:05:01.430 align:start position:0%
space
yes<00:04:59.040><c> i</c><00:04:59.199><c> finally</c><00:04:59.680><c> did</c><00:04:59.840><c> it</c><00:05:00.240><c> i</c><00:05:00.479><c> definitely</c><00:05:01.039><c> passed</c>

00:05:01.430 --> 00:05:01.440 align:start position:0%
yes i finally did it i definitely passed
 

00:05:01.440 --> 00:05:02.310 align:start position:0%
yes i finally did it i definitely passed
now

00:05:02.310 --> 00:05:02.320 align:start position:0%
now
 

00:05:02.320 --> 00:05:05.029 align:start position:0%
now
perfect<00:05:03.039><c> well</c><00:05:03.199><c> done</c><00:05:03.440><c> nick</c><00:05:04.479><c> that</c><00:05:04.639><c> concludes</c>

00:05:05.029 --> 00:05:05.039 align:start position:0%
perfect well done nick that concludes
 

00:05:05.039 --> 00:05:06.230 align:start position:0%
perfect well done nick that concludes
the<00:05:05.199><c> interview</c><00:05:05.520><c> for</c><00:05:05.680><c> today</c>

00:05:06.230 --> 00:05:06.240 align:start position:0%
the interview for today
 

00:05:06.240 --> 00:05:08.870 align:start position:0%
the interview for today
keep<00:05:06.479><c> an</c><00:05:06.639><c> eye</c><00:05:06.880><c> out</c><00:05:07.680><c> for</c><00:05:07.840><c> an</c><00:05:08.000><c> email</c><00:05:08.320><c> to</c><00:05:08.479><c> schedule</c>

00:05:08.870 --> 00:05:08.880 align:start position:0%
keep an eye out for an email to schedule
 

00:05:08.880 --> 00:05:10.310 align:start position:0%
keep an eye out for an email to schedule
your<00:05:09.039><c> next</c><00:05:09.280><c> interview</c><00:05:09.840><c> alright</c>

00:05:10.310 --> 00:05:10.320 align:start position:0%
your next interview alright
 

00:05:10.320 --> 00:05:13.749 align:start position:0%
your next interview alright
have<00:05:10.479><c> a</c><00:05:10.560><c> nice</c><00:05:10.720><c> day</c><00:05:10.880><c> nick</c><00:05:11.360><c> thank</c><00:05:11.520><c> you</c><00:05:11.680><c> you</c><00:05:11.919><c> too</c>

00:05:13.749 --> 00:05:13.759 align:start position:0%
have a nice day nick thank you you too
 

00:05:13.759 --> 00:05:16.469 align:start position:0%
have a nice day nick thank you you too
wait<00:05:14.560><c> did</c><00:05:14.720><c> he</c><00:05:14.960><c> just</c><00:05:15.120><c> say</c><00:05:15.440><c> next</c><00:05:15.840><c> interview</c>

00:05:16.469 --> 00:05:16.479 align:start position:0%
wait did he just say next interview
 

00:05:16.479 --> 00:05:29.990 align:start position:0%
wait did he just say next interview
there's<00:05:22.840><c> more</c>

00:05:29.990 --> 00:05:30.000 align:start position:0%
 
 

00:05:30.000 --> 00:05:32.080 align:start position:0%
 
you

